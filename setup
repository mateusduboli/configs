#!/bin/bash
source setup.cfg

function downloadFile {
	LINK=$1
	OUTPUT=$2
	if hash curl 2>/dev/null; then
		curl $LINK -o $OUTPUT
	elif hash wget 2>/dev/null; then
		wget -O $OUTPUT $LINK
	fi
}

function createDirectories {
	for dir in ${MY_DIRS[@]} ; do
		mkdir -p $HOME/$dir 2>/dev/null
		if [ $? -eq 0 ]; then
			echo "Directory $HOME/$dir created."
		else
			echo "Directory $HOME/$dir already exists."
		fi
	done
}

function removeEmptyDirectories {
	for dir in ${MY_DIRS[@]} ; do
		rmdir $dir 2>/dev/null
	done
}

function installZsh {
	SCRIPT=install.sh
	downloadFile $OH_MY_ZSH_URL $SCRIPT
	sh $SCRIPT
	rm $SCRIPT
}

function linkFiles {
	for file in $DOT_FILES/* ; do
		filename=$(basename $file)
		dest="$HOME/.$filename"
		mv $dest "$BACKUP/$filename" 2>/dev/null
		if [ $? -eq 0 ]; then
			echo "Saving : $dest"
		fi
		ln -s $DOT_FILES/$filename $dest
		echo "Linking : $dest"
	done
}

function linkFiles {
	for file in $DOT_FILES/* ; do
		filename=$(basename $file)
		dest="$HOME/.$filename"
		mv $dest "$BACKUP/$filename" 2>/dev/null
		if [ $? -eq 0 ]; then
			echo "Saving : $dest"
		fi
		ln -s $DOT_FILES/$filename $dest
		echo "Linking : $dest"
	done
}

function installVim {
	# Install Vundle
	vim +BundleInstall
}

function usage {
	printf "Configuration management"
	printf "\nExample usage"
	printf "\nsetup"
	printf "\n\tLink files in the dotfiles folder, install Vim, install oh-my-zsh and create the directory structure."
	printf "\n-h"
	printf "\n\tThis menu."
	printf "\n-i"
	printf "\n\tRevert to backup files, and remove empty created directories"
	#printf "\n-c"
	#printf "\n\tCheckout\\Clone the repositories into the ~/Repositories folder"
	#printf "\n-d"
	#printf "\n\tCreate default directories in the user's home folder"
	#printf "\n-i"
	#printf "\n\tLink and Copy the link and copy folders into the user's home directory"
	#printf "\n-u"
	#printf "\n\tUpdate\\Pull the repositories on the ~/Repositories folder"
	#printf "\n-g"
	#printf "\n\tDiffs and copies the new files from the link and copy folders, into the user's home directory"
	#printf "\n-r"
	#printf "\n\tRemove the links installed in the user's home directory, and replaces then with the backups"
	#printf "\n"
}

# If no arguments passed, then print usage and exit
if [ "$#" == 0 ]; then
	mkdir $BACKUP 2>/dev/null
	linkFiles
	installVim
	installZsh
	createDirectories
	exit 1
fi

while getopts ":hi" OPTION; do
	case $OPTION in
		h)
			usage
			exit 1
			;;
		i)
			unlinkFiles
			removeEmptyDirectories	
			;;
		?)
			usage
			exit 1
			;;
	esac
done
