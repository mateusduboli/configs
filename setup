#!/bin/bash
# vim:et:sw=4
source setup.cfg

function downloadFile {
LINK=$1
OUTPUT=$2
if hash curl 2>/dev/null; then
    curl $LINK -o $OUTPUT
elif hash wget 2>/dev/null; then
    wget -O $OUTPUT $LINK
fi
}

function createDirectories {
for dir in ${MY_DIRS[@]} ; do
    mkdir -p $HOME/$dir 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "Directory $HOME/$dir created."
    else
        echo "Directory $HOME/$dir already exists."
    fi
done
}

function removeEmptyDirectories {
for dir in ${MY_DIRS[@]} ; do
    rmdir $dir 2>/dev/null
done
}

function installZsh {
if [ $SHELL == '/bin/zsh' ]; then
	if [ -d "$HOME/.oh-my-zsh" ]; then
		SCRIPT=install.sh
		downloadFile $OH_MY_ZSH_URL $SCRIPT
		sh $SCRIPT
		rm $SCRIPT
	else
		echo "Oh my ZSH already installed"
	fi
else
	echo "Install zsh first"
fi
}

function linkFiles {
for file in $DOT_FILES/* ; do
    filename=$(basename $file)
    src="$DOT_FILES/$filename"
    dest="$HOME/.$filename"
    if [ -e $dest ] && [ ! -L $dest ]; then
        backup="$BACKUP/$filename"
        echo "Saving : $dest in $backup"
        mv $dest $backup
    fi
    echo "Linking : $src with $dest"
    ln -sf $src $dest
done
}

function installVim {
# Install Vundle
git clone $VUNDLE_URL ~/.vim/bundle/vundle 2>/dev/null
vim +BundleInstall +qa
if [ ! -d $HOME/.vim/bundle/YouCompleMe ]; then
    cd $HOME/.vim/bundle/YouCompleteMe/ && ./install.sh --clang-completer
fi
}

function installFonts {
fc-cache -f -v
}

function usage {
printf "Configuration management"
printf "\nExample usage"
printf "\nsetup"
printf "\n\tLink files in the dotfiles folder, install Vim, install oh-my-zsh and create the directory structure."
printf "\n-h"
printf "\n\tThis menu."
printf "\n-i"
printf "\n\tRevert to backup files, and remove empty created directories"
}

# If no arguments passed, then print usage and exit
if [ "$#" == 0 ]; then
    mkdir $BACKUP 2>/dev/null
    installZsh
    linkFiles
    installVim
    createDirectories
    installFonts
    exit 1
fi

while getopts ":hi" OPTION; do
    case $OPTION in
        h)
            usage
            exit 1
            ;;
        i)
            unlinkFiles
            removeEmptyDirectories
            ;;
        ?)
            usage
            exit 1
            ;;
    esac
done
